import java.net.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.io.*;

public class TCPClient {
	static byte[] user;
	static byte[] pass;
	static byte[] nonce = new byte[64];
	static Socket socket;
	static InputStream in;
	static OutputStream out;
	
	public static void connRequest(byte[] user, byte[] pass, String server, int serverPort) throws IOException{
		try {
			socket = new Socket(server, serverPort);
		} catch (UnknownHostException e) {
			System.out.println("Uknown Host: IP address of server could not be determined. Please try again");
			//e.printStackTrace();
			System.exit(0);
		} catch (IOException e) {
			System.out.println("IO Exception: I/O Channel could not opened. Please Try Again.");
			//e.printStackTrace();
			System.exit(0);
		}
		System.out.println("Connected to Server... Sending Echo Request");
		
		in = socket.getInputStream();
		out = socket.getOutputStream();
		
		out.write("N".getBytes()); // Authentication Request
	
	}
	/**
	 * Test MD5 digest computation
	 *
	 * @author Roedy Green
	 * @version 1.0
	 * @since 2004-06-07
	 */
	public static byte[] MD5(String user, String password, String nonce) throws NoSuchAlgorithmException, UnsupportedEncodingException{
		String concat = user+password+nonce;
		byte[] theTextToDigestAsBytes = concat.getBytes("UTF-8");
		MessageDigest md= MessageDigest.getInstance("MD5");
		md.update(theTextToDigestAsBytes);
		byte[] digest= md.digest();
		return digest;
	}
	public static void main(String[] args) throws IOException{
		if((args.length < 3)||(args.length > 3)){
			throw new IllegalArgumentException("Parameters: <server:[port]> <username> <password>");
		}
		
		// Socket Initialization Info
		String[] params = args[0].split(":");
		String server = params[0];
		int serverPort = 7; // Default port number
		try{
			serverPort = Integer.parseInt(params[1]);
		}
		catch(Exception e){
			System.out.println("Invalid Argument: Must Include ':' between Server & Port #. Please try again.");
			System.exit(0);
		}
		
		
		user = args[1].getBytes();
		pass = args[2].getBytes();
		
		
		// Socket Initialization Info
		
		connRequest(user, pass, server, serverPort);
		
		in.read(nonce);
		if("Access to Server Denied".trim().equals(new String(nonce).trim())){
			System.exit(0);
		}
		System.out.println("Nonce:"+ new String(nonce));
		
		
		// CREATE MD5 HASH 
		byte[] hash = null;
		try {
			hash = MD5(new String(user), new String(pass), new String(nonce));
		} catch (NoSuchAlgorithmException e) {
			System.out.println("Algorithm Exception: Problem computing the hash, exiting the program");
			System.exit(0);
		} 
		
		
		//System.out.println("Hash:"+ new String(hash));
		
		
		////////// Plain text username and hash sent
		String auth = new String(user) + "*" + new String(hash);
		System.out.println("User+Hash:" + auth);
		byte[] trans = auth.getBytes();
		out.write(trans);
		
		socket.close();
	}
}
